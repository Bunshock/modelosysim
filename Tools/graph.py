import matplotlib.pyplot as plt
import numpy as np

# Discrete graphs

# Generate an array of numbers generated by a given discrete distribution
# 'distrib' with parameters 'args' using 'N_SIM' simulations
def generateDVA(N_SIM, distrib, *args):
    x_vec = []
    for _ in range(N_SIM):
        X = distrib(*args)
        x_vec.append(X)
    return x_vec


# Graph discrete distribution given an array of numbers 'x_vec' generated
# by said distribution
def graphDVA(x_vec, title='Graph'):
    plt.title(title)
    plt.grid(axis='y', color='blue', linestyle='--', linewidth=0.5)
    plt.hist(x_vec, color = 'lightblue', edgecolor = 'black',
         bins = np.arange(min(x_vec), max(x_vec) + 2) - 0.5)
    plt.xticks(range(min(x_vec), max(x_vec) + 1))
    plt.xlim([min(x_vec) - 1, max(x_vec) + 1])
    plt.show()
